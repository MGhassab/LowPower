

================================================================
== Vivado HLS Report for 'sobel_filter'
================================================================
* Date:           Sun Aug  6 15:50:59 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        edgeDetecion
* Solution:       solution1
* Product family: spartan7
* Target device:  xc7s100-fgga676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.907|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1821721|  1821721|  1821721|  1821721|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  1821720|  1821720|      3572|          -|          -|   510|    no    |
        | + Loop 1.1  |     3570|     3570|         7|          -|          -|   510|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.39>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([262144 x i8]* %in_r) nounwind, !map !7"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([262144 x i8]* %out_r) nounwind, !map !13"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @sobel_filter_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.39ns)   --->   "br label %1" [sobel.c:6]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.39>

State 2 <SV = 1> <Delay = 1.39>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ 1, %0 ], [ %i, %3 ]"   --->   Operation 14 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.30ns)   --->   "%icmp_ln6 = icmp eq i9 %i_0, -1" [sobel.c:6]   --->   Operation 15 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 510, i64 510, i64 510) nounwind"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln6, label %4, label %.preheader.preheader" [sobel.c:6]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%shl_ln8 = call i18 @_ssdm_op_BitConcatenate.i18.i9.i9(i9 %i_0, i9 0)" [sobel.c:8]   --->   Operation 18 'bitconcatenate' 'shl_ln8' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%or_ln8 = or i18 %shl_ln8, 511" [sobel.c:8]   --->   Operation 19 'or' 'or_ln8' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i18 %or_ln8 to i19" [sobel.c:8]   --->   Operation 20 'zext' 'zext_ln8' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%or_ln8_1 = or i18 %shl_ln8, 1" [sobel.c:8]   --->   Operation 21 'or' 'or_ln8_1' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i18 %or_ln8_1 to i19" [sobel.c:8]   --->   Operation 22 'zext' 'zext_ln8_1' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.39ns)   --->   "br label %.preheader" [sobel.c:7]   --->   Operation 23 'br' <Predicate = (!icmp_ln6)> <Delay = 1.39>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "ret void" [sobel.c:18]   --->   Operation 24 'ret' <Predicate = (icmp_ln6)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.25>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%j_0 = phi i9 [ %j, %2 ], [ 1, %.preheader.preheader ]"   --->   Operation 25 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i9 %j_0 to i10" [sobel.c:7]   --->   Operation 26 'zext' 'zext_ln7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln7_1 = zext i9 %j_0 to i19" [sobel.c:7]   --->   Operation 27 'zext' 'zext_ln7_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln7_2 = zext i9 %j_0 to i11" [sobel.c:7]   --->   Operation 28 'zext' 'zext_ln7_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (1.30ns)   --->   "%icmp_ln7 = icmp eq i9 %j_0, -1" [sobel.c:7]   --->   Operation 29 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 510, i64 510, i64 510) nounwind"   --->   Operation 30 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %3, label %2" [sobel.c:7]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.67ns)   --->   "%add_ln8 = add i11 -513, %zext_ln7_2" [sobel.c:8]   --->   Operation 32 'add' 'add_ln8' <Predicate = (!icmp_ln7)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%sext_ln8 = sext i11 %add_ln8 to i18" [sobel.c:8]   --->   Operation 33 'sext' 'sext_ln8' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (1.80ns)   --->   "%add_ln8_1 = add i18 %sext_ln8, %shl_ln8" [sobel.c:8]   --->   Operation 34 'add' 'add_ln8_1' <Predicate = (!icmp_ln7)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln8_2 = zext i18 %add_ln8_1 to i64" [sobel.c:8]   --->   Operation 35 'zext' 'zext_ln8_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%in_addr = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_2" [sobel.c:8]   --->   Operation 36 'getelementptr' 'in_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 37 [2/2] (2.77ns)   --->   "%in_load = load i8* %in_addr, align 1" [sobel.c:8]   --->   Operation 37 'load' 'in_load' <Predicate = (!icmp_ln7)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_3 : Operation 38 [1/1] (1.65ns)   --->   "%add_ln8_2 = add i9 -1, %j_0" [sobel.c:8]   --->   Operation 38 'add' 'add_ln8_2' <Predicate = (!icmp_ln7)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%add_ln8_3 = call i18 @_ssdm_op_BitConcatenate.i18.i9.i9(i9 %i_0, i9 %add_ln8_2)" [sobel.c:8]   --->   Operation 39 'bitconcatenate' 'add_ln8_3' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln8_4 = zext i18 %add_ln8_3 to i64" [sobel.c:8]   --->   Operation 40 'zext' 'zext_ln8_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%in_addr_1 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_4" [sobel.c:8]   --->   Operation 41 'getelementptr' 'in_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (2.77ns)   --->   "%in_load_1 = load i8* %in_addr_1, align 1" [sobel.c:8]   --->   Operation 42 'load' 'in_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_3 : Operation 43 [1/1] (1.80ns)   --->   "%add_ln8_4 = add i19 %zext_ln8, %zext_ln7_1" [sobel.c:8]   --->   Operation 43 'add' 'add_ln8_4' <Predicate = (!icmp_ln7)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (1.80ns)   --->   "%add_ln8_7 = add i19 %zext_ln8_1, %zext_ln7_1" [sobel.c:8]   --->   Operation 44 'add' 'add_ln8_7' <Predicate = (!icmp_ln7)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (1.65ns)   --->   "%i = add i9 %i_0, 1" [sobel.c:6]   --->   Operation 45 'add' 'i' <Predicate = (icmp_ln7)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "br label %1" [sobel.c:6]   --->   Operation 46 'br' <Predicate = (icmp_ln7)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.23>
ST_4 : Operation 47 [1/2] (2.77ns)   --->   "%in_load = load i8* %in_addr, align 1" [sobel.c:8]   --->   Operation 47 'load' 'in_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_4 : Operation 48 [1/2] (2.77ns)   --->   "%in_load_1 = load i8* %in_addr_1, align 1" [sobel.c:8]   --->   Operation 48 'load' 'in_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln8_6 = zext i19 %add_ln8_4 to i64" [sobel.c:8]   --->   Operation 49 'zext' 'zext_ln8_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%in_addr_2 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_6" [sobel.c:8]   --->   Operation 50 'getelementptr' 'in_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (2.77ns)   --->   "%in_load_2 = load i8* %in_addr_2, align 1" [sobel.c:8]   --->   Operation 51 'load' 'in_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_4 : Operation 52 [1/1] (1.66ns)   --->   "%add_ln8_5 = add i10 -511, %zext_ln7" [sobel.c:8]   --->   Operation 52 'add' 'add_ln8_5' <Predicate = true> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%sext_ln8_1 = sext i10 %add_ln8_5 to i18" [sobel.c:8]   --->   Operation 53 'sext' 'sext_ln8_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (1.80ns)   --->   "%add_ln8_6 = add i18 %sext_ln8_1, %shl_ln8" [sobel.c:8]   --->   Operation 54 'add' 'add_ln8_6' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln8_8 = zext i18 %add_ln8_6 to i64" [sobel.c:8]   --->   Operation 55 'zext' 'zext_ln8_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%in_addr_3 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_8" [sobel.c:8]   --->   Operation 56 'getelementptr' 'in_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [2/2] (2.77ns)   --->   "%in_load_3 = load i8* %in_addr_3, align 1" [sobel.c:8]   --->   Operation 57 'load' 'in_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>

State 5 <SV = 4> <Delay = 6.05>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln8_3 = zext i8 %in_load to i9" [sobel.c:8]   --->   Operation 58 'zext' 'zext_ln8_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%shl_ln8_1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %in_load_1, i1 false)" [sobel.c:8]   --->   Operation 59 'bitconcatenate' 'shl_ln8_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln8_5 = zext i9 %shl_ln8_1 to i10" [sobel.c:8]   --->   Operation 60 'zext' 'zext_ln8_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/2] (2.77ns)   --->   "%in_load_2 = load i8* %in_addr_2, align 1" [sobel.c:8]   --->   Operation 61 'load' 'in_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln8_7 = zext i8 %in_load_2 to i9" [sobel.c:8]   --->   Operation 62 'zext' 'zext_ln8_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/2] (2.77ns)   --->   "%in_load_3 = load i8* %in_addr_3, align 1" [sobel.c:8]   --->   Operation 63 'load' 'in_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln8_10 = zext i19 %add_ln8_7 to i64" [sobel.c:8]   --->   Operation 64 'zext' 'zext_ln8_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%in_addr_4 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_10" [sobel.c:8]   --->   Operation 65 'getelementptr' 'in_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [2/2] (2.77ns)   --->   "%in_load_4 = load i8* %in_addr_4, align 1" [sobel.c:8]   --->   Operation 66 'load' 'in_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln8_14 = zext i10 %add_ln8_5 to i18" [sobel.c:8]   --->   Operation 67 'zext' 'zext_ln8_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (1.80ns)   --->   "%add_ln8_8 = add i18 %zext_ln8_14, %shl_ln8" [sobel.c:8]   --->   Operation 68 'add' 'add_ln8_8' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln8_11 = zext i18 %add_ln8_8 to i64" [sobel.c:8]   --->   Operation 69 'zext' 'zext_ln8_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%in_addr_5 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln8_11" [sobel.c:8]   --->   Operation 70 'getelementptr' 'in_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [2/2] (2.77ns)   --->   "%in_load_5 = load i8* %in_addr_5, align 1" [sobel.c:8]   --->   Operation 71 'load' 'in_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_5 : Operation 72 [1/1] (1.63ns)   --->   "%add_ln8_9 = add i9 %zext_ln8_3, %zext_ln8_7" [sobel.c:8]   --->   Operation 72 'add' 'add_ln8_9' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln8_17 = zext i9 %add_ln8_9 to i10" [sobel.c:8]   --->   Operation 73 'zext' 'zext_ln8_17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (1.65ns)   --->   "%add_ln8_10 = add i10 %zext_ln8_17, %zext_ln8_5" [sobel.c:8]   --->   Operation 74 'add' 'add_ln8_10' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (1.63ns)   --->   "%sub_ln9 = sub i9 %zext_ln8_3, %zext_ln8_7" [sobel.c:9]   --->   Operation 75 'sub' 'sub_ln9' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.57>
ST_6 : Operation 76 [1/2] (2.77ns)   --->   "%in_load_4 = load i8* %in_addr_4, align 1" [sobel.c:8]   --->   Operation 76 'load' 'in_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_6 : Operation 77 [1/2] (2.77ns)   --->   "%in_load_5 = load i8* %in_addr_5, align 1" [sobel.c:8]   --->   Operation 77 'load' 'in_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%or_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i1.i9(i1 true, i9 %j_0)" [sobel.c:9]   --->   Operation 78 'bitconcatenate' 'or_ln9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln9 = sext i10 %or_ln9 to i18" [sobel.c:9]   --->   Operation 79 'sext' 'sext_ln9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (1.80ns)   --->   "%add_ln9 = add i18 %sext_ln9, %shl_ln8" [sobel.c:9]   --->   Operation 80 'add' 'add_ln9' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i18 %add_ln9 to i64" [sobel.c:9]   --->   Operation 81 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%in_addr_6 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln9" [sobel.c:9]   --->   Operation 82 'getelementptr' 'in_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [2/2] (2.77ns)   --->   "%in_load_6 = load i8* %in_addr_6, align 1" [sobel.c:9]   --->   Operation 83 'load' 'in_load_6' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln9_2 = zext i10 %or_ln9 to i18" [sobel.c:9]   --->   Operation 84 'zext' 'zext_ln9_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (1.80ns)   --->   "%add_ln9_1 = add i18 %zext_ln9_2, %shl_ln8" [sobel.c:9]   --->   Operation 85 'add' 'add_ln9_1' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln9_3 = zext i18 %add_ln9_1 to i64" [sobel.c:9]   --->   Operation 86 'zext' 'zext_ln9_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%in_addr_7 = getelementptr [262144 x i8]* %in_r, i64 0, i64 %zext_ln9_3" [sobel.c:9]   --->   Operation 87 'getelementptr' 'in_addr_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 88 [2/2] (2.77ns)   --->   "%in_load_7 = load i8* %in_addr_7, align 1" [sobel.c:9]   --->   Operation 88 'load' 'in_load_7' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>

State 7 <SV = 6> <Delay = 3.01>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln8_9 = zext i8 %in_load_3 to i10" [sobel.c:8]   --->   Operation 89 'zext' 'zext_ln8_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln8_16 = zext i8 %in_load_5 to i10" [sobel.c:8]   --->   Operation 90 'zext' 'zext_ln8_16' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/2] (2.77ns)   --->   "%in_load_6 = load i8* %in_addr_6, align 1" [sobel.c:9]   --->   Operation 91 'load' 'in_load_6' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_7 : Operation 92 [1/2] (2.77ns)   --->   "%in_load_7 = load i8* %in_addr_7, align 1" [sobel.c:9]   --->   Operation 92 'load' 'in_load_7' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%sext_ln9_1 = sext i9 %sub_ln9 to i10" [sobel.c:9]   --->   Operation 93 'sext' 'sext_ln9_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln9_2 = add i10 %sext_ln9_1, %zext_ln8_9" [sobel.c:9]   --->   Operation 94 'add' 'add_ln9_2' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 95 [1/1] (3.01ns) (root node of TernaryAdder)   --->   "%sub_ln9_1 = sub i10 %add_ln9_2, %zext_ln8_16" [sobel.c:9]   --->   Operation 95 'sub' 'sub_ln9_1' <Predicate = true> <Delay = 3.01> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 7.90>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln8_12 = zext i8 %in_load_3 to i11" [sobel.c:8]   --->   Operation 96 'zext' 'zext_ln8_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%shl_ln8_2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %in_load_4, i1 false)" [sobel.c:8]   --->   Operation 97 'bitconcatenate' 'shl_ln8_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln8_13 = zext i9 %shl_ln8_2 to i11" [sobel.c:8]   --->   Operation 98 'zext' 'zext_ln8_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln8_15 = zext i8 %in_load_5 to i11" [sobel.c:8]   --->   Operation 99 'zext' 'zext_ln8_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln8_18 = zext i10 %add_ln8_10 to i11" [sobel.c:8]   --->   Operation 100 'zext' 'zext_ln8_18' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 101 [1/1] (1.66ns)   --->   "%sub_ln8 = sub i11 %zext_ln8_12, %zext_ln8_18" [sobel.c:8]   --->   Operation 101 'sub' 'sub_ln8' <Predicate = true> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%shl_ln8_3 = shl i8 %in_load_4, 1" [sobel.c:8]   --->   Operation 102 'shl' 'shl_ln8_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%trunc_ln8 = trunc i11 %sub_ln8 to i8" [sobel.c:8]   --->   Operation 103 'trunc' 'trunc_ln8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln8_11 = add i11 %sub_ln8, %zext_ln8_15" [sobel.c:8]   --->   Operation 104 'add' 'add_ln8_11' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 105 [1/1] (3.04ns) (root node of TernaryAdder)   --->   "%gx_sum = add i11 %add_ln8_11, %zext_ln8_13" [sobel.c:8]   --->   Operation 105 'add' 'gx_sum' <Predicate = true> <Delay = 3.04> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%shl_ln9_1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %in_load_6, i1 false)" [sobel.c:9]   --->   Operation 106 'bitconcatenate' 'shl_ln9_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln9_1 = zext i9 %shl_ln9_1 to i11" [sobel.c:9]   --->   Operation 107 'zext' 'zext_ln9_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%shl_ln9 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %in_load_7, i1 false)" [sobel.c:9]   --->   Operation 108 'bitconcatenate' 'shl_ln9' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln9_4 = zext i9 %shl_ln9 to i11" [sobel.c:9]   --->   Operation 109 'zext' 'zext_ln9_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln9_2 = sext i10 %sub_ln9_1 to i11" [sobel.c:9]   --->   Operation 110 'sext' 'sext_ln9_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln9_3 = add i11 %zext_ln9_1, %sext_ln9_2" [sobel.c:9]   --->   Operation 111 'add' 'add_ln9_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 112 [1/1] (3.04ns) (root node of TernaryAdder)   --->   "%gy_sum = sub i11 %add_ln9_3, %zext_ln9_4" [sobel.c:9]   --->   Operation 112 'sub' 'gy_sum' <Predicate = true> <Delay = 3.04> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln12)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %gx_sum, i32 10)" [sobel.c:10]   --->   Operation 113 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln10_1 = add i8 %trunc_ln8, %shl_ln8_3" [sobel.c:10]   --->   Operation 114 'add' 'add_ln10_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 115 [1/1] (2.97ns) (root node of TernaryAdder)   --->   "%add_ln10 = add i8 %add_ln10_1, %in_load_5" [sobel.c:10]   --->   Operation 115 'add' 'add_ln10' <Predicate = true> <Delay = 2.97> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 116 [1/1] (1.63ns)   --->   "%sub_ln10 = sub i8 0, %add_ln10" [sobel.c:10]   --->   Operation 116 'sub' 'sub_ln10' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node add_ln12)   --->   "%select_ln10 = select i1 %tmp, i8 %sub_ln10, i8 %add_ln10" [sobel.c:10]   --->   Operation 117 'select' 'select_ln10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node add_ln12)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %gy_sum, i32 10)" [sobel.c:11]   --->   Operation 118 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i11 %gy_sum to i8" [sobel.c:11]   --->   Operation 119 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (1.63ns)   --->   "%sub_ln11 = sub i8 0, %trunc_ln11" [sobel.c:11]   --->   Operation 120 'sub' 'sub_ln11' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln12)   --->   "%select_ln11 = select i1 %tmp_1, i8 %sub_ln11, i8 %trunc_ln11" [sobel.c:11]   --->   Operation 121 'select' 'select_ln11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 122 [1/1] (1.63ns) (out node of the LUT)   --->   "%add_ln12 = add i8 %select_ln11, %select_ln10" [sobel.c:12]   --->   Operation 122 'add' 'add_ln12' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 2.77>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%add_ln12_1 = call i18 @_ssdm_op_BitConcatenate.i18.i9.i9(i9 %i_0, i9 %j_0)" [sobel.c:12]   --->   Operation 123 'bitconcatenate' 'add_ln12_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i18 %add_ln12_1 to i64" [sobel.c:12]   --->   Operation 124 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [262144 x i8]* %out_r, i64 0, i64 %zext_ln12" [sobel.c:12]   --->   Operation 125 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (2.77ns)   --->   "store i8 %add_ln12, i8* %out_addr, align 1" [sobel.c:13]   --->   Operation 126 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 262144> <RAM>
ST_9 : Operation 127 [1/1] (1.65ns)   --->   "%j = add i9 1, %j_0" [sobel.c:7]   --->   Operation 127 'add' 'j' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.00ns)   --->   "br label %.preheader" [sobel.c:7]   --->   Operation 128 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.39ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sobel.c:6) [8]  (1.39 ns)

 <State 2>: 1.39ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', sobel.c:7) [20]  (1.39 ns)

 <State 3>: 6.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', sobel.c:7) [20]  (0 ns)
	'add' operation ('add_ln8', sobel.c:8) [28]  (1.68 ns)
	'add' operation ('add_ln8_1', sobel.c:8) [30]  (1.8 ns)
	'getelementptr' operation ('in_addr', sobel.c:8) [32]  (0 ns)
	'load' operation ('in_load', sobel.c:8) on array 'in_r' [33]  (2.77 ns)

 <State 4>: 6.24ns
The critical path consists of the following:
	'add' operation ('add_ln8_5', sobel.c:8) [47]  (1.66 ns)
	'add' operation ('add_ln8_6', sobel.c:8) [49]  (1.8 ns)
	'getelementptr' operation ('in_addr_3', sobel.c:8) [51]  (0 ns)
	'load' operation ('in_load_3', sobel.c:8) on array 'in_r' [52]  (2.77 ns)

 <State 5>: 6.06ns
The critical path consists of the following:
	'load' operation ('in_load_2', sobel.c:8) on array 'in_r' [45]  (2.77 ns)
	'add' operation ('add_ln8_9', sobel.c:8) [68]  (1.64 ns)
	'add' operation ('add_ln8_10', sobel.c:8) [70]  (1.65 ns)

 <State 6>: 4.57ns
The critical path consists of the following:
	'add' operation ('add_ln9', sobel.c:9) [79]  (1.8 ns)
	'getelementptr' operation ('in_addr_6', sobel.c:9) [81]  (0 ns)
	'load' operation ('in_load_6', sobel.c:9) on array 'in_r' [82]  (2.77 ns)

 <State 7>: 3.02ns
The critical path consists of the following:
	'add' operation ('add_ln9_2', sobel.c:9) [94]  (0 ns)
	'sub' operation ('sub_ln9_1', sobel.c:9) [95]  (3.02 ns)

 <State 8>: 7.91ns
The critical path consists of the following:
	'sub' operation ('sub_ln8', sobel.c:8) [72]  (1.66 ns)
	'add' operation ('add_ln10_1', sobel.c:10) [100]  (0 ns)
	'add' operation ('add_ln10', sobel.c:10) [101]  (2.97 ns)
	'sub' operation ('sub_ln10', sobel.c:10) [102]  (1.64 ns)
	'select' operation ('select_ln10', sobel.c:10) [103]  (0 ns)
	'add' operation ('add_ln12', sobel.c:12) [108]  (1.64 ns)

 <State 9>: 2.77ns
The critical path consists of the following:
	'getelementptr' operation ('out_addr', sobel.c:12) [111]  (0 ns)
	'store' operation ('store_ln13', sobel.c:13) of variable 'add_ln12', sobel.c:12 on array 'out_r' [112]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
