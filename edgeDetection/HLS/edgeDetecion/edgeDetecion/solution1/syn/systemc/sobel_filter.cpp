// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> sobel_filter::ap_ST_fsm_state1 = "1";
const sc_lv<9> sobel_filter::ap_ST_fsm_state2 = "10";
const sc_lv<9> sobel_filter::ap_ST_fsm_state3 = "100";
const sc_lv<9> sobel_filter::ap_ST_fsm_state4 = "1000";
const sc_lv<9> sobel_filter::ap_ST_fsm_state5 = "10000";
const sc_lv<9> sobel_filter::ap_ST_fsm_state6 = "100000";
const sc_lv<9> sobel_filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> sobel_filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> sobel_filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> sobel_filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sobel_filter::ap_const_lv32_3 = "11";
const sc_lv<32> sobel_filter::ap_const_lv32_4 = "100";
const sc_lv<32> sobel_filter::ap_const_lv32_5 = "101";
const sc_lv<32> sobel_filter::ap_const_lv32_1 = "1";
const sc_lv<1> sobel_filter::ap_const_lv1_0 = "0";
const sc_lv<32> sobel_filter::ap_const_lv32_2 = "10";
const sc_lv<1> sobel_filter::ap_const_lv1_1 = "1";
const sc_lv<32> sobel_filter::ap_const_lv32_6 = "110";
const sc_lv<32> sobel_filter::ap_const_lv32_7 = "111";
const sc_lv<32> sobel_filter::ap_const_lv32_8 = "1000";
const sc_lv<9> sobel_filter::ap_const_lv9_1 = "1";
const sc_lv<9> sobel_filter::ap_const_lv9_1FF = "111111111";
const sc_lv<9> sobel_filter::ap_const_lv9_0 = "000000000";
const sc_lv<18> sobel_filter::ap_const_lv18_1FF = "111111111";
const sc_lv<18> sobel_filter::ap_const_lv18_1 = "1";
const sc_lv<11> sobel_filter::ap_const_lv11_5FF = "10111111111";
const sc_lv<10> sobel_filter::ap_const_lv10_201 = "1000000001";
const sc_lv<8> sobel_filter::ap_const_lv8_1 = "1";
const sc_lv<32> sobel_filter::ap_const_lv32_A = "1010";
const sc_lv<8> sobel_filter::ap_const_lv8_0 = "00000000";
const bool sobel_filter::ap_const_boolean_1 = true;

sobel_filter::sobel_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln10_1_fu_510_p2);
    sensitive << ( trunc_ln8_fu_449_p1 );
    sensitive << ( shl_ln8_3_fu_443_p2 );

    SC_METHOD(thread_add_ln10_fu_516_p2);
    sensitive << ( in_load_5_reg_676 );
    sensitive << ( add_ln10_1_fu_510_p2 );

    SC_METHOD(thread_add_ln12_1_fu_567_p3);
    sensitive << ( i_0_reg_134 );
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_add_ln12_fu_561_p2);
    sensitive << ( select_ln11_fu_553_p3 );
    sensitive << ( select_ln10_fu_527_p3 );

    SC_METHOD(thread_add_ln8_10_fu_345_p2);
    sensitive << ( zext_ln8_17_fu_341_p1 );
    sensitive << ( zext_ln8_5_fu_310_p1 );

    SC_METHOD(thread_add_ln8_11_fu_453_p2);
    sensitive << ( sub_ln8_fu_437_p2 );
    sensitive << ( zext_ln8_15_fu_431_p1 );

    SC_METHOD(thread_add_ln8_1_fu_230_p2);
    sensitive << ( shl_ln8_reg_589 );
    sensitive << ( sext_ln8_fu_226_p1 );

    SC_METHOD(thread_add_ln8_2_fu_240_p2);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_add_ln8_3_fu_246_p3);
    sensitive << ( i_0_reg_134 );
    sensitive << ( add_ln8_2_fu_240_p2 );

    SC_METHOD(thread_add_ln8_4_fu_259_p2);
    sensitive << ( zext_ln8_reg_598 );
    sensitive << ( zext_ln7_1_fu_206_p1 );

    SC_METHOD(thread_add_ln8_5_fu_279_p2);
    sensitive << ( zext_ln7_reg_608 );

    SC_METHOD(thread_add_ln8_6_fu_288_p2);
    sensitive << ( shl_ln8_reg_589 );
    sensitive << ( sext_ln8_1_fu_284_p1 );

    SC_METHOD(thread_add_ln8_7_fu_264_p2);
    sensitive << ( zext_ln8_1_reg_603 );
    sensitive << ( zext_ln7_1_fu_206_p1 );

    SC_METHOD(thread_add_ln8_8_fu_325_p2);
    sensitive << ( shl_ln8_reg_589 );
    sensitive << ( zext_ln8_14_fu_322_p1 );

    SC_METHOD(thread_add_ln8_9_fu_335_p2);
    sensitive << ( zext_ln8_3_fu_298_p1 );
    sensitive << ( zext_ln8_7_fu_314_p1 );

    SC_METHOD(thread_add_ln8_fu_220_p2);
    sensitive << ( zext_ln7_2_fu_210_p1 );

    SC_METHOD(thread_add_ln9_1_fu_383_p2);
    sensitive << ( shl_ln8_reg_589 );
    sensitive << ( zext_ln9_2_fu_379_p1 );

    SC_METHOD(thread_add_ln9_2_fu_403_p2);
    sensitive << ( sext_ln9_1_fu_400_p1 );
    sensitive << ( zext_ln8_9_fu_393_p1 );

    SC_METHOD(thread_add_ln9_3_fu_490_p2);
    sensitive << ( zext_ln9_1_fu_472_p1 );
    sensitive << ( sext_ln9_2_fu_487_p1 );

    SC_METHOD(thread_add_ln9_fu_369_p2);
    sensitive << ( shl_ln8_reg_589 );
    sensitive << ( sext_ln9_fu_365_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_168_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_168_p2 );

    SC_METHOD(thread_gx_sum_fu_459_p2);
    sensitive << ( add_ln8_11_fu_453_p2 );
    sensitive << ( zext_ln8_13_fu_427_p1 );

    SC_METHOD(thread_gy_sum_fu_496_p2);
    sensitive << ( add_ln9_3_fu_490_p2 );
    sensitive << ( zext_ln9_4_fu_483_p1 );

    SC_METHOD(thread_i_fu_269_p2);
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_icmp_ln6_fu_168_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_icmp_ln7_fu_214_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln8_2_fu_235_p1 );
    sensitive << ( zext_ln8_6_fu_275_p1 );
    sensitive << ( zext_ln8_10_fu_318_p1 );
    sensitive << ( zext_ln9_fu_374_p1 );

    SC_METHOD(thread_in_r_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln8_4_fu_254_p1 );
    sensitive << ( zext_ln8_8_fu_293_p1 );
    sensitive << ( zext_ln8_11_fu_330_p1 );
    sensitive << ( zext_ln9_3_fu_388_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_r_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_fu_580_p2);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_or_ln8_1_fu_192_p2);
    sensitive << ( shl_ln8_fu_174_p3 );

    SC_METHOD(thread_or_ln8_fu_182_p2);
    sensitive << ( shl_ln8_fu_174_p3 );

    SC_METHOD(thread_or_ln9_fu_357_p3);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln12_fu_575_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( add_ln12_reg_708 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_select_ln10_fu_527_p3);
    sensitive << ( add_ln10_fu_516_p2 );
    sensitive << ( tmp_fu_502_p3 );
    sensitive << ( sub_ln10_fu_521_p2 );

    SC_METHOD(thread_select_ln11_fu_553_p3);
    sensitive << ( trunc_ln11_fu_543_p1 );
    sensitive << ( tmp_1_fu_535_p3 );
    sensitive << ( sub_ln11_fu_547_p2 );

    SC_METHOD(thread_sext_ln8_1_fu_284_p1);
    sensitive << ( add_ln8_5_fu_279_p2 );

    SC_METHOD(thread_sext_ln8_fu_226_p1);
    sensitive << ( add_ln8_fu_220_p2 );

    SC_METHOD(thread_sext_ln9_1_fu_400_p1);
    sensitive << ( sub_ln9_reg_671 );

    SC_METHOD(thread_sext_ln9_2_fu_487_p1);
    sensitive << ( sub_ln9_1_reg_703 );

    SC_METHOD(thread_sext_ln9_fu_365_p1);
    sensitive << ( or_ln9_fu_357_p3 );

    SC_METHOD(thread_shl_ln8_1_fu_302_p3);
    sensitive << ( reg_163 );

    SC_METHOD(thread_shl_ln8_2_fu_419_p3);
    sensitive << ( reg_163 );

    SC_METHOD(thread_shl_ln8_3_fu_443_p2);
    sensitive << ( reg_163 );

    SC_METHOD(thread_shl_ln8_fu_174_p3);
    sensitive << ( i_0_reg_134 );

    SC_METHOD(thread_shl_ln9_1_fu_465_p3);
    sensitive << ( in_load_6_reg_693 );

    SC_METHOD(thread_shl_ln9_fu_476_p3);
    sensitive << ( in_load_7_reg_698 );

    SC_METHOD(thread_sub_ln10_fu_521_p2);
    sensitive << ( add_ln10_fu_516_p2 );

    SC_METHOD(thread_sub_ln11_fu_547_p2);
    sensitive << ( trunc_ln11_fu_543_p1 );

    SC_METHOD(thread_sub_ln8_fu_437_p2);
    sensitive << ( zext_ln8_12_fu_415_p1 );
    sensitive << ( zext_ln8_18_fu_434_p1 );

    SC_METHOD(thread_sub_ln9_1_fu_409_p2);
    sensitive << ( add_ln9_2_fu_403_p2 );
    sensitive << ( zext_ln8_16_fu_397_p1 );

    SC_METHOD(thread_sub_ln9_fu_351_p2);
    sensitive << ( zext_ln8_3_fu_298_p1 );
    sensitive << ( zext_ln8_7_fu_314_p1 );

    SC_METHOD(thread_tmp_1_fu_535_p3);
    sensitive << ( gy_sum_fu_496_p2 );

    SC_METHOD(thread_tmp_fu_502_p3);
    sensitive << ( gx_sum_fu_459_p2 );

    SC_METHOD(thread_trunc_ln11_fu_543_p1);
    sensitive << ( gy_sum_fu_496_p2 );

    SC_METHOD(thread_trunc_ln8_fu_449_p1);
    sensitive << ( sub_ln8_fu_437_p2 );

    SC_METHOD(thread_zext_ln12_fu_575_p1);
    sensitive << ( add_ln12_1_fu_567_p3 );

    SC_METHOD(thread_zext_ln7_1_fu_206_p1);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_zext_ln7_2_fu_210_p1);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_zext_ln7_fu_202_p1);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_zext_ln8_10_fu_318_p1);
    sensitive << ( add_ln8_7_reg_631 );

    SC_METHOD(thread_zext_ln8_11_fu_330_p1);
    sensitive << ( add_ln8_8_fu_325_p2 );

    SC_METHOD(thread_zext_ln8_12_fu_415_p1);
    sensitive << ( reg_158 );

    SC_METHOD(thread_zext_ln8_13_fu_427_p1);
    sensitive << ( shl_ln8_2_fu_419_p3 );

    SC_METHOD(thread_zext_ln8_14_fu_322_p1);
    sensitive << ( add_ln8_5_reg_646 );

    SC_METHOD(thread_zext_ln8_15_fu_431_p1);
    sensitive << ( in_load_5_reg_676 );

    SC_METHOD(thread_zext_ln8_16_fu_397_p1);
    sensitive << ( in_load_5_reg_676 );

    SC_METHOD(thread_zext_ln8_17_fu_341_p1);
    sensitive << ( add_ln8_9_fu_335_p2 );

    SC_METHOD(thread_zext_ln8_18_fu_434_p1);
    sensitive << ( add_ln8_10_reg_666 );

    SC_METHOD(thread_zext_ln8_1_fu_198_p1);
    sensitive << ( or_ln8_1_fu_192_p2 );

    SC_METHOD(thread_zext_ln8_2_fu_235_p1);
    sensitive << ( add_ln8_1_fu_230_p2 );

    SC_METHOD(thread_zext_ln8_3_fu_298_p1);
    sensitive << ( reg_158 );

    SC_METHOD(thread_zext_ln8_4_fu_254_p1);
    sensitive << ( add_ln8_3_fu_246_p3 );

    SC_METHOD(thread_zext_ln8_5_fu_310_p1);
    sensitive << ( shl_ln8_1_fu_302_p3 );

    SC_METHOD(thread_zext_ln8_6_fu_275_p1);
    sensitive << ( add_ln8_4_reg_626 );

    SC_METHOD(thread_zext_ln8_7_fu_314_p1);
    sensitive << ( in_r_q0 );

    SC_METHOD(thread_zext_ln8_8_fu_293_p1);
    sensitive << ( add_ln8_6_fu_288_p2 );

    SC_METHOD(thread_zext_ln8_9_fu_393_p1);
    sensitive << ( reg_158 );

    SC_METHOD(thread_zext_ln8_fu_188_p1);
    sensitive << ( or_ln8_fu_182_p2 );

    SC_METHOD(thread_zext_ln9_1_fu_472_p1);
    sensitive << ( shl_ln9_1_fu_465_p3 );

    SC_METHOD(thread_zext_ln9_2_fu_379_p1);
    sensitive << ( or_ln9_fu_357_p3 );

    SC_METHOD(thread_zext_ln9_3_fu_388_p1);
    sensitive << ( add_ln9_1_fu_383_p2 );

    SC_METHOD(thread_zext_ln9_4_fu_483_p1);
    sensitive << ( shl_ln9_fu_476_p3 );

    SC_METHOD(thread_zext_ln9_fu_374_p1);
    sensitive << ( add_ln9_fu_369_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_168_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln7_fu_214_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_r_address1, "(port)in_r_address1");
    sc_trace(mVcdFile, in_r_ce1, "(port)in_r_ce1");
    sc_trace(mVcdFile, in_r_q1, "(port)in_r_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_158, "reg_158");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, shl_ln8_fu_174_p3, "shl_ln8_fu_174_p3");
    sc_trace(mVcdFile, shl_ln8_reg_589, "shl_ln8_reg_589");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln6_fu_168_p2, "icmp_ln6_fu_168_p2");
    sc_trace(mVcdFile, zext_ln8_fu_188_p1, "zext_ln8_fu_188_p1");
    sc_trace(mVcdFile, zext_ln8_reg_598, "zext_ln8_reg_598");
    sc_trace(mVcdFile, zext_ln8_1_fu_198_p1, "zext_ln8_1_fu_198_p1");
    sc_trace(mVcdFile, zext_ln8_1_reg_603, "zext_ln8_1_reg_603");
    sc_trace(mVcdFile, zext_ln7_fu_202_p1, "zext_ln7_fu_202_p1");
    sc_trace(mVcdFile, zext_ln7_reg_608, "zext_ln7_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln7_fu_214_p2, "icmp_ln7_fu_214_p2");
    sc_trace(mVcdFile, add_ln8_4_fu_259_p2, "add_ln8_4_fu_259_p2");
    sc_trace(mVcdFile, add_ln8_4_reg_626, "add_ln8_4_reg_626");
    sc_trace(mVcdFile, add_ln8_7_fu_264_p2, "add_ln8_7_fu_264_p2");
    sc_trace(mVcdFile, add_ln8_7_reg_631, "add_ln8_7_reg_631");
    sc_trace(mVcdFile, i_fu_269_p2, "i_fu_269_p2");
    sc_trace(mVcdFile, add_ln8_5_fu_279_p2, "add_ln8_5_fu_279_p2");
    sc_trace(mVcdFile, add_ln8_5_reg_646, "add_ln8_5_reg_646");
    sc_trace(mVcdFile, add_ln8_10_fu_345_p2, "add_ln8_10_fu_345_p2");
    sc_trace(mVcdFile, add_ln8_10_reg_666, "add_ln8_10_reg_666");
    sc_trace(mVcdFile, sub_ln9_fu_351_p2, "sub_ln9_fu_351_p2");
    sc_trace(mVcdFile, sub_ln9_reg_671, "sub_ln9_reg_671");
    sc_trace(mVcdFile, in_load_5_reg_676, "in_load_5_reg_676");
    sc_trace(mVcdFile, in_load_6_reg_693, "in_load_6_reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, in_load_7_reg_698, "in_load_7_reg_698");
    sc_trace(mVcdFile, sub_ln9_1_fu_409_p2, "sub_ln9_1_fu_409_p2");
    sc_trace(mVcdFile, sub_ln9_1_reg_703, "sub_ln9_1_reg_703");
    sc_trace(mVcdFile, add_ln12_fu_561_p2, "add_ln12_fu_561_p2");
    sc_trace(mVcdFile, add_ln12_reg_708, "add_ln12_reg_708");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_fu_580_p2, "j_fu_580_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_0_reg_134, "i_0_reg_134");
    sc_trace(mVcdFile, j_0_reg_146, "j_0_reg_146");
    sc_trace(mVcdFile, zext_ln8_2_fu_235_p1, "zext_ln8_2_fu_235_p1");
    sc_trace(mVcdFile, zext_ln8_4_fu_254_p1, "zext_ln8_4_fu_254_p1");
    sc_trace(mVcdFile, zext_ln8_6_fu_275_p1, "zext_ln8_6_fu_275_p1");
    sc_trace(mVcdFile, zext_ln8_8_fu_293_p1, "zext_ln8_8_fu_293_p1");
    sc_trace(mVcdFile, zext_ln8_10_fu_318_p1, "zext_ln8_10_fu_318_p1");
    sc_trace(mVcdFile, zext_ln8_11_fu_330_p1, "zext_ln8_11_fu_330_p1");
    sc_trace(mVcdFile, zext_ln9_fu_374_p1, "zext_ln9_fu_374_p1");
    sc_trace(mVcdFile, zext_ln9_3_fu_388_p1, "zext_ln9_3_fu_388_p1");
    sc_trace(mVcdFile, zext_ln12_fu_575_p1, "zext_ln12_fu_575_p1");
    sc_trace(mVcdFile, or_ln8_fu_182_p2, "or_ln8_fu_182_p2");
    sc_trace(mVcdFile, or_ln8_1_fu_192_p2, "or_ln8_1_fu_192_p2");
    sc_trace(mVcdFile, zext_ln7_2_fu_210_p1, "zext_ln7_2_fu_210_p1");
    sc_trace(mVcdFile, add_ln8_fu_220_p2, "add_ln8_fu_220_p2");
    sc_trace(mVcdFile, sext_ln8_fu_226_p1, "sext_ln8_fu_226_p1");
    sc_trace(mVcdFile, add_ln8_1_fu_230_p2, "add_ln8_1_fu_230_p2");
    sc_trace(mVcdFile, add_ln8_2_fu_240_p2, "add_ln8_2_fu_240_p2");
    sc_trace(mVcdFile, add_ln8_3_fu_246_p3, "add_ln8_3_fu_246_p3");
    sc_trace(mVcdFile, zext_ln7_1_fu_206_p1, "zext_ln7_1_fu_206_p1");
    sc_trace(mVcdFile, sext_ln8_1_fu_284_p1, "sext_ln8_1_fu_284_p1");
    sc_trace(mVcdFile, add_ln8_6_fu_288_p2, "add_ln8_6_fu_288_p2");
    sc_trace(mVcdFile, shl_ln8_1_fu_302_p3, "shl_ln8_1_fu_302_p3");
    sc_trace(mVcdFile, zext_ln8_14_fu_322_p1, "zext_ln8_14_fu_322_p1");
    sc_trace(mVcdFile, add_ln8_8_fu_325_p2, "add_ln8_8_fu_325_p2");
    sc_trace(mVcdFile, zext_ln8_3_fu_298_p1, "zext_ln8_3_fu_298_p1");
    sc_trace(mVcdFile, zext_ln8_7_fu_314_p1, "zext_ln8_7_fu_314_p1");
    sc_trace(mVcdFile, add_ln8_9_fu_335_p2, "add_ln8_9_fu_335_p2");
    sc_trace(mVcdFile, zext_ln8_17_fu_341_p1, "zext_ln8_17_fu_341_p1");
    sc_trace(mVcdFile, zext_ln8_5_fu_310_p1, "zext_ln8_5_fu_310_p1");
    sc_trace(mVcdFile, or_ln9_fu_357_p3, "or_ln9_fu_357_p3");
    sc_trace(mVcdFile, sext_ln9_fu_365_p1, "sext_ln9_fu_365_p1");
    sc_trace(mVcdFile, add_ln9_fu_369_p2, "add_ln9_fu_369_p2");
    sc_trace(mVcdFile, zext_ln9_2_fu_379_p1, "zext_ln9_2_fu_379_p1");
    sc_trace(mVcdFile, add_ln9_1_fu_383_p2, "add_ln9_1_fu_383_p2");
    sc_trace(mVcdFile, sext_ln9_1_fu_400_p1, "sext_ln9_1_fu_400_p1");
    sc_trace(mVcdFile, zext_ln8_9_fu_393_p1, "zext_ln8_9_fu_393_p1");
    sc_trace(mVcdFile, add_ln9_2_fu_403_p2, "add_ln9_2_fu_403_p2");
    sc_trace(mVcdFile, zext_ln8_16_fu_397_p1, "zext_ln8_16_fu_397_p1");
    sc_trace(mVcdFile, shl_ln8_2_fu_419_p3, "shl_ln8_2_fu_419_p3");
    sc_trace(mVcdFile, zext_ln8_12_fu_415_p1, "zext_ln8_12_fu_415_p1");
    sc_trace(mVcdFile, zext_ln8_18_fu_434_p1, "zext_ln8_18_fu_434_p1");
    sc_trace(mVcdFile, sub_ln8_fu_437_p2, "sub_ln8_fu_437_p2");
    sc_trace(mVcdFile, zext_ln8_15_fu_431_p1, "zext_ln8_15_fu_431_p1");
    sc_trace(mVcdFile, add_ln8_11_fu_453_p2, "add_ln8_11_fu_453_p2");
    sc_trace(mVcdFile, zext_ln8_13_fu_427_p1, "zext_ln8_13_fu_427_p1");
    sc_trace(mVcdFile, shl_ln9_1_fu_465_p3, "shl_ln9_1_fu_465_p3");
    sc_trace(mVcdFile, shl_ln9_fu_476_p3, "shl_ln9_fu_476_p3");
    sc_trace(mVcdFile, zext_ln9_1_fu_472_p1, "zext_ln9_1_fu_472_p1");
    sc_trace(mVcdFile, sext_ln9_2_fu_487_p1, "sext_ln9_2_fu_487_p1");
    sc_trace(mVcdFile, add_ln9_3_fu_490_p2, "add_ln9_3_fu_490_p2");
    sc_trace(mVcdFile, zext_ln9_4_fu_483_p1, "zext_ln9_4_fu_483_p1");
    sc_trace(mVcdFile, gx_sum_fu_459_p2, "gx_sum_fu_459_p2");
    sc_trace(mVcdFile, trunc_ln8_fu_449_p1, "trunc_ln8_fu_449_p1");
    sc_trace(mVcdFile, shl_ln8_3_fu_443_p2, "shl_ln8_3_fu_443_p2");
    sc_trace(mVcdFile, add_ln10_1_fu_510_p2, "add_ln10_1_fu_510_p2");
    sc_trace(mVcdFile, add_ln10_fu_516_p2, "add_ln10_fu_516_p2");
    sc_trace(mVcdFile, tmp_fu_502_p3, "tmp_fu_502_p3");
    sc_trace(mVcdFile, sub_ln10_fu_521_p2, "sub_ln10_fu_521_p2");
    sc_trace(mVcdFile, gy_sum_fu_496_p2, "gy_sum_fu_496_p2");
    sc_trace(mVcdFile, trunc_ln11_fu_543_p1, "trunc_ln11_fu_543_p1");
    sc_trace(mVcdFile, tmp_1_fu_535_p3, "tmp_1_fu_535_p3");
    sc_trace(mVcdFile, sub_ln11_fu_547_p2, "sub_ln11_fu_547_p2");
    sc_trace(mVcdFile, select_ln11_fu_553_p3, "select_ln11_fu_553_p3");
    sc_trace(mVcdFile, select_ln10_fu_527_p3, "select_ln10_fu_527_p3");
    sc_trace(mVcdFile, add_ln12_1_fu_567_p3, "add_ln12_1_fu_567_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("sobel_filter.hdltvin.dat");
    mHdltvoutHandle.open("sobel_filter.hdltvout.dat");
}

sobel_filter::~sobel_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void sobel_filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_fu_214_p2.read(), ap_const_lv1_1))) {
        i_0_reg_134 = i_fu_269_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_134 = ap_const_lv9_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_168_p2.read(), ap_const_lv1_0))) {
        j_0_reg_146 = ap_const_lv9_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_0_reg_146 = j_fu_580_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        reg_158 = in_r_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_158 = in_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        reg_163 = in_r_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_163 = in_r_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        add_ln12_reg_708 = add_ln12_fu_561_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln8_10_reg_666 = add_ln8_10_fu_345_p2.read();
        sub_ln9_reg_671 = sub_ln9_fu_351_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln7_fu_214_p2.read()))) {
        add_ln8_4_reg_626 = add_ln8_4_fu_259_p2.read();
        add_ln8_7_reg_631 = add_ln8_7_fu_264_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln8_5_reg_646 = add_ln8_5_fu_279_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_load_5_reg_676 = in_r_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_load_6_reg_693 = in_r_q0.read();
        in_load_7_reg_698 = in_r_q1.read();
        sub_ln9_1_reg_703 = sub_ln9_1_fu_409_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_168_p2.read(), ap_const_lv1_0))) {
        shl_ln8_reg_589 = shl_ln8_fu_174_p3.read();
        zext_ln8_1_reg_603 = zext_ln8_1_fu_198_p1.read();
        zext_ln8_reg_598 = zext_ln8_fu_188_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        zext_ln7_reg_608 = zext_ln7_fu_202_p1.read();
    }
}

void sobel_filter::thread_add_ln10_1_fu_510_p2() {
    add_ln10_1_fu_510_p2 = (!trunc_ln8_fu_449_p1.read().is_01() || !shl_ln8_3_fu_443_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln8_fu_449_p1.read()) + sc_biguint<8>(shl_ln8_3_fu_443_p2.read()));
}

void sobel_filter::thread_add_ln10_fu_516_p2() {
    add_ln10_fu_516_p2 = (!add_ln10_1_fu_510_p2.read().is_01() || !in_load_5_reg_676.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln10_1_fu_510_p2.read()) + sc_biguint<8>(in_load_5_reg_676.read()));
}

void sobel_filter::thread_add_ln12_1_fu_567_p3() {
    add_ln12_1_fu_567_p3 = esl_concat<9,9>(i_0_reg_134.read(), j_0_reg_146.read());
}

void sobel_filter::thread_add_ln12_fu_561_p2() {
    add_ln12_fu_561_p2 = (!select_ln11_fu_553_p3.read().is_01() || !select_ln10_fu_527_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(select_ln11_fu_553_p3.read()) + sc_biguint<8>(select_ln10_fu_527_p3.read()));
}

void sobel_filter::thread_add_ln8_10_fu_345_p2() {
    add_ln8_10_fu_345_p2 = (!zext_ln8_17_fu_341_p1.read().is_01() || !zext_ln8_5_fu_310_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln8_17_fu_341_p1.read()) + sc_biguint<10>(zext_ln8_5_fu_310_p1.read()));
}

void sobel_filter::thread_add_ln8_11_fu_453_p2() {
    add_ln8_11_fu_453_p2 = (!sub_ln8_fu_437_p2.read().is_01() || !zext_ln8_15_fu_431_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln8_fu_437_p2.read()) + sc_biguint<11>(zext_ln8_15_fu_431_p1.read()));
}

void sobel_filter::thread_add_ln8_1_fu_230_p2() {
    add_ln8_1_fu_230_p2 = (!sext_ln8_fu_226_p1.read().is_01() || !shl_ln8_reg_589.read().is_01())? sc_lv<18>(): (sc_bigint<18>(sext_ln8_fu_226_p1.read()) + sc_biguint<18>(shl_ln8_reg_589.read()));
}

void sobel_filter::thread_add_ln8_2_fu_240_p2() {
    add_ln8_2_fu_240_p2 = (!ap_const_lv9_1FF.is_01() || !j_0_reg_146.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1FF) + sc_biguint<9>(j_0_reg_146.read()));
}

void sobel_filter::thread_add_ln8_3_fu_246_p3() {
    add_ln8_3_fu_246_p3 = esl_concat<9,9>(i_0_reg_134.read(), add_ln8_2_fu_240_p2.read());
}

void sobel_filter::thread_add_ln8_4_fu_259_p2() {
    add_ln8_4_fu_259_p2 = (!zext_ln8_reg_598.read().is_01() || !zext_ln7_1_fu_206_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(zext_ln8_reg_598.read()) + sc_biguint<19>(zext_ln7_1_fu_206_p1.read()));
}

void sobel_filter::thread_add_ln8_5_fu_279_p2() {
    add_ln8_5_fu_279_p2 = (!ap_const_lv10_201.is_01() || !zext_ln7_reg_608.read().is_01())? sc_lv<10>(): (sc_bigint<10>(ap_const_lv10_201) + sc_biguint<10>(zext_ln7_reg_608.read()));
}

void sobel_filter::thread_add_ln8_6_fu_288_p2() {
    add_ln8_6_fu_288_p2 = (!sext_ln8_1_fu_284_p1.read().is_01() || !shl_ln8_reg_589.read().is_01())? sc_lv<18>(): (sc_bigint<18>(sext_ln8_1_fu_284_p1.read()) + sc_biguint<18>(shl_ln8_reg_589.read()));
}

void sobel_filter::thread_add_ln8_7_fu_264_p2() {
    add_ln8_7_fu_264_p2 = (!zext_ln8_1_reg_603.read().is_01() || !zext_ln7_1_fu_206_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(zext_ln8_1_reg_603.read()) + sc_biguint<19>(zext_ln7_1_fu_206_p1.read()));
}

void sobel_filter::thread_add_ln8_8_fu_325_p2() {
    add_ln8_8_fu_325_p2 = (!zext_ln8_14_fu_322_p1.read().is_01() || !shl_ln8_reg_589.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln8_14_fu_322_p1.read()) + sc_biguint<18>(shl_ln8_reg_589.read()));
}

void sobel_filter::thread_add_ln8_9_fu_335_p2() {
    add_ln8_9_fu_335_p2 = (!zext_ln8_3_fu_298_p1.read().is_01() || !zext_ln8_7_fu_314_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln8_3_fu_298_p1.read()) + sc_biguint<9>(zext_ln8_7_fu_314_p1.read()));
}

void sobel_filter::thread_add_ln8_fu_220_p2() {
    add_ln8_fu_220_p2 = (!ap_const_lv11_5FF.is_01() || !zext_ln7_2_fu_210_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_5FF) + sc_biguint<11>(zext_ln7_2_fu_210_p1.read()));
}

void sobel_filter::thread_add_ln9_1_fu_383_p2() {
    add_ln9_1_fu_383_p2 = (!zext_ln9_2_fu_379_p1.read().is_01() || !shl_ln8_reg_589.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln9_2_fu_379_p1.read()) + sc_biguint<18>(shl_ln8_reg_589.read()));
}

void sobel_filter::thread_add_ln9_2_fu_403_p2() {
    add_ln9_2_fu_403_p2 = (!sext_ln9_1_fu_400_p1.read().is_01() || !zext_ln8_9_fu_393_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(sext_ln9_1_fu_400_p1.read()) + sc_biguint<10>(zext_ln8_9_fu_393_p1.read()));
}

void sobel_filter::thread_add_ln9_3_fu_490_p2() {
    add_ln9_3_fu_490_p2 = (!zext_ln9_1_fu_472_p1.read().is_01() || !sext_ln9_2_fu_487_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln9_1_fu_472_p1.read()) + sc_bigint<11>(sext_ln9_2_fu_487_p1.read()));
}

void sobel_filter::thread_add_ln9_fu_369_p2() {
    add_ln9_fu_369_p2 = (!sext_ln9_fu_365_p1.read().is_01() || !shl_ln8_reg_589.read().is_01())? sc_lv<18>(): (sc_bigint<18>(sext_ln9_fu_365_p1.read()) + sc_biguint<18>(shl_ln8_reg_589.read()));
}

void sobel_filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel_filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sobel_filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sobel_filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sobel_filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sobel_filter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sobel_filter::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sobel_filter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sobel_filter::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sobel_filter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_168_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_168_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel_filter::thread_gx_sum_fu_459_p2() {
    gx_sum_fu_459_p2 = (!add_ln8_11_fu_453_p2.read().is_01() || !zext_ln8_13_fu_427_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(add_ln8_11_fu_453_p2.read()) + sc_biguint<11>(zext_ln8_13_fu_427_p1.read()));
}

void sobel_filter::thread_gy_sum_fu_496_p2() {
    gy_sum_fu_496_p2 = (!add_ln9_3_fu_490_p2.read().is_01() || !zext_ln9_4_fu_483_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(add_ln9_3_fu_490_p2.read()) - sc_biguint<11>(zext_ln9_4_fu_483_p1.read()));
}

void sobel_filter::thread_i_fu_269_p2() {
    i_fu_269_p2 = (!i_0_reg_134.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_134.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void sobel_filter::thread_icmp_ln6_fu_168_p2() {
    icmp_ln6_fu_168_p2 = (!i_0_reg_134.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_134.read() == ap_const_lv9_1FF);
}

void sobel_filter::thread_icmp_ln7_fu_214_p2() {
    icmp_ln7_fu_214_p2 = (!j_0_reg_146.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_146.read() == ap_const_lv9_1FF);
}

void sobel_filter::thread_in_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_r_address0 =  (sc_lv<18>) (zext_ln9_fu_374_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_r_address0 =  (sc_lv<18>) (zext_ln8_10_fu_318_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_r_address0 =  (sc_lv<18>) (zext_ln8_6_fu_275_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_r_address0 =  (sc_lv<18>) (zext_ln8_2_fu_235_p1.read());
    } else {
        in_r_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void sobel_filter::thread_in_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_r_address1 =  (sc_lv<18>) (zext_ln9_3_fu_388_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_r_address1 =  (sc_lv<18>) (zext_ln8_11_fu_330_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_r_address1 =  (sc_lv<18>) (zext_ln8_8_fu_293_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_r_address1 =  (sc_lv<18>) (zext_ln8_4_fu_254_p1.read());
    } else {
        in_r_address1 = "XXXXXXXXXXXXXXXXXX";
    }
}

void sobel_filter::thread_in_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void sobel_filter::thread_in_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        in_r_ce1 = ap_const_logic_1;
    } else {
        in_r_ce1 = ap_const_logic_0;
    }
}

void sobel_filter::thread_j_fu_580_p2() {
    j_fu_580_p2 = (!ap_const_lv9_1.is_01() || !j_0_reg_146.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(j_0_reg_146.read()));
}

void sobel_filter::thread_or_ln8_1_fu_192_p2() {
    or_ln8_1_fu_192_p2 = (shl_ln8_fu_174_p3.read() | ap_const_lv18_1);
}

void sobel_filter::thread_or_ln8_fu_182_p2() {
    or_ln8_fu_182_p2 = (shl_ln8_fu_174_p3.read() | ap_const_lv18_1FF);
}

void sobel_filter::thread_or_ln9_fu_357_p3() {
    or_ln9_fu_357_p3 = esl_concat<1,9>(ap_const_lv1_1, j_0_reg_146.read());
}

void sobel_filter::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<18>) (zext_ln12_fu_575_p1.read());
}

void sobel_filter::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void sobel_filter::thread_out_r_d0() {
    out_r_d0 = add_ln12_reg_708.read();
}

void sobel_filter::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void sobel_filter::thread_select_ln10_fu_527_p3() {
    select_ln10_fu_527_p3 = (!tmp_fu_502_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_fu_502_p3.read()[0].to_bool())? sub_ln10_fu_521_p2.read(): add_ln10_fu_516_p2.read());
}

void sobel_filter::thread_select_ln11_fu_553_p3() {
    select_ln11_fu_553_p3 = (!tmp_1_fu_535_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_1_fu_535_p3.read()[0].to_bool())? sub_ln11_fu_547_p2.read(): trunc_ln11_fu_543_p1.read());
}

void sobel_filter::thread_sext_ln8_1_fu_284_p1() {
    sext_ln8_1_fu_284_p1 = esl_sext<18,10>(add_ln8_5_fu_279_p2.read());
}

void sobel_filter::thread_sext_ln8_fu_226_p1() {
    sext_ln8_fu_226_p1 = esl_sext<18,11>(add_ln8_fu_220_p2.read());
}

void sobel_filter::thread_sext_ln9_1_fu_400_p1() {
    sext_ln9_1_fu_400_p1 = esl_sext<10,9>(sub_ln9_reg_671.read());
}

void sobel_filter::thread_sext_ln9_2_fu_487_p1() {
    sext_ln9_2_fu_487_p1 = esl_sext<11,10>(sub_ln9_1_reg_703.read());
}

void sobel_filter::thread_sext_ln9_fu_365_p1() {
    sext_ln9_fu_365_p1 = esl_sext<18,10>(or_ln9_fu_357_p3.read());
}

void sobel_filter::thread_shl_ln8_1_fu_302_p3() {
    shl_ln8_1_fu_302_p3 = esl_concat<8,1>(reg_163.read(), ap_const_lv1_0);
}

void sobel_filter::thread_shl_ln8_2_fu_419_p3() {
    shl_ln8_2_fu_419_p3 = esl_concat<8,1>(reg_163.read(), ap_const_lv1_0);
}

void sobel_filter::thread_shl_ln8_3_fu_443_p2() {
    shl_ln8_3_fu_443_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): reg_163.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void sobel_filter::thread_shl_ln8_fu_174_p3() {
    shl_ln8_fu_174_p3 = esl_concat<9,9>(i_0_reg_134.read(), ap_const_lv9_0);
}

void sobel_filter::thread_shl_ln9_1_fu_465_p3() {
    shl_ln9_1_fu_465_p3 = esl_concat<8,1>(in_load_6_reg_693.read(), ap_const_lv1_0);
}

void sobel_filter::thread_shl_ln9_fu_476_p3() {
    shl_ln9_fu_476_p3 = esl_concat<8,1>(in_load_7_reg_698.read(), ap_const_lv1_0);
}

void sobel_filter::thread_sub_ln10_fu_521_p2() {
    sub_ln10_fu_521_p2 = (!ap_const_lv8_0.is_01() || !add_ln10_fu_516_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(add_ln10_fu_516_p2.read()));
}

void sobel_filter::thread_sub_ln11_fu_547_p2() {
    sub_ln11_fu_547_p2 = (!ap_const_lv8_0.is_01() || !trunc_ln11_fu_543_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(trunc_ln11_fu_543_p1.read()));
}

void sobel_filter::thread_sub_ln8_fu_437_p2() {
    sub_ln8_fu_437_p2 = (!zext_ln8_12_fu_415_p1.read().is_01() || !zext_ln8_18_fu_434_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln8_12_fu_415_p1.read()) - sc_biguint<11>(zext_ln8_18_fu_434_p1.read()));
}

void sobel_filter::thread_sub_ln9_1_fu_409_p2() {
    sub_ln9_1_fu_409_p2 = (!add_ln9_2_fu_403_p2.read().is_01() || !zext_ln8_16_fu_397_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln9_2_fu_403_p2.read()) - sc_biguint<10>(zext_ln8_16_fu_397_p1.read()));
}

void sobel_filter::thread_sub_ln9_fu_351_p2() {
    sub_ln9_fu_351_p2 = (!zext_ln8_3_fu_298_p1.read().is_01() || !zext_ln8_7_fu_314_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln8_3_fu_298_p1.read()) - sc_biguint<9>(zext_ln8_7_fu_314_p1.read()));
}

void sobel_filter::thread_tmp_1_fu_535_p3() {
    tmp_1_fu_535_p3 = gy_sum_fu_496_p2.read().range(10, 10);
}

void sobel_filter::thread_tmp_fu_502_p3() {
    tmp_fu_502_p3 = gx_sum_fu_459_p2.read().range(10, 10);
}

void sobel_filter::thread_trunc_ln11_fu_543_p1() {
    trunc_ln11_fu_543_p1 = gy_sum_fu_496_p2.read().range(8-1, 0);
}

void sobel_filter::thread_trunc_ln8_fu_449_p1() {
    trunc_ln8_fu_449_p1 = sub_ln8_fu_437_p2.read().range(8-1, 0);
}

void sobel_filter::thread_zext_ln12_fu_575_p1() {
    zext_ln12_fu_575_p1 = esl_zext<64,18>(add_ln12_1_fu_567_p3.read());
}

void sobel_filter::thread_zext_ln7_1_fu_206_p1() {
    zext_ln7_1_fu_206_p1 = esl_zext<19,9>(j_0_reg_146.read());
}

void sobel_filter::thread_zext_ln7_2_fu_210_p1() {
    zext_ln7_2_fu_210_p1 = esl_zext<11,9>(j_0_reg_146.read());
}

void sobel_filter::thread_zext_ln7_fu_202_p1() {
    zext_ln7_fu_202_p1 = esl_zext<10,9>(j_0_reg_146.read());
}

void sobel_filter::thread_zext_ln8_10_fu_318_p1() {
    zext_ln8_10_fu_318_p1 = esl_zext<64,19>(add_ln8_7_reg_631.read());
}

void sobel_filter::thread_zext_ln8_11_fu_330_p1() {
    zext_ln8_11_fu_330_p1 = esl_zext<64,18>(add_ln8_8_fu_325_p2.read());
}

void sobel_filter::thread_zext_ln8_12_fu_415_p1() {
    zext_ln8_12_fu_415_p1 = esl_zext<11,8>(reg_158.read());
}

void sobel_filter::thread_zext_ln8_13_fu_427_p1() {
    zext_ln8_13_fu_427_p1 = esl_zext<11,9>(shl_ln8_2_fu_419_p3.read());
}

void sobel_filter::thread_zext_ln8_14_fu_322_p1() {
    zext_ln8_14_fu_322_p1 = esl_zext<18,10>(add_ln8_5_reg_646.read());
}

void sobel_filter::thread_zext_ln8_15_fu_431_p1() {
    zext_ln8_15_fu_431_p1 = esl_zext<11,8>(in_load_5_reg_676.read());
}

void sobel_filter::thread_zext_ln8_16_fu_397_p1() {
    zext_ln8_16_fu_397_p1 = esl_zext<10,8>(in_load_5_reg_676.read());
}

void sobel_filter::thread_zext_ln8_17_fu_341_p1() {
    zext_ln8_17_fu_341_p1 = esl_zext<10,9>(add_ln8_9_fu_335_p2.read());
}

void sobel_filter::thread_zext_ln8_18_fu_434_p1() {
    zext_ln8_18_fu_434_p1 = esl_zext<11,10>(add_ln8_10_reg_666.read());
}

void sobel_filter::thread_zext_ln8_1_fu_198_p1() {
    zext_ln8_1_fu_198_p1 = esl_zext<19,18>(or_ln8_1_fu_192_p2.read());
}

void sobel_filter::thread_zext_ln8_2_fu_235_p1() {
    zext_ln8_2_fu_235_p1 = esl_zext<64,18>(add_ln8_1_fu_230_p2.read());
}

void sobel_filter::thread_zext_ln8_3_fu_298_p1() {
    zext_ln8_3_fu_298_p1 = esl_zext<9,8>(reg_158.read());
}

void sobel_filter::thread_zext_ln8_4_fu_254_p1() {
    zext_ln8_4_fu_254_p1 = esl_zext<64,18>(add_ln8_3_fu_246_p3.read());
}

void sobel_filter::thread_zext_ln8_5_fu_310_p1() {
    zext_ln8_5_fu_310_p1 = esl_zext<10,9>(shl_ln8_1_fu_302_p3.read());
}

void sobel_filter::thread_zext_ln8_6_fu_275_p1() {
    zext_ln8_6_fu_275_p1 = esl_zext<64,19>(add_ln8_4_reg_626.read());
}

void sobel_filter::thread_zext_ln8_7_fu_314_p1() {
    zext_ln8_7_fu_314_p1 = esl_zext<9,8>(in_r_q0.read());
}

void sobel_filter::thread_zext_ln8_8_fu_293_p1() {
    zext_ln8_8_fu_293_p1 = esl_zext<64,18>(add_ln8_6_fu_288_p2.read());
}

void sobel_filter::thread_zext_ln8_9_fu_393_p1() {
    zext_ln8_9_fu_393_p1 = esl_zext<10,8>(reg_158.read());
}

void sobel_filter::thread_zext_ln8_fu_188_p1() {
    zext_ln8_fu_188_p1 = esl_zext<19,18>(or_ln8_fu_182_p2.read());
}

void sobel_filter::thread_zext_ln9_1_fu_472_p1() {
    zext_ln9_1_fu_472_p1 = esl_zext<11,9>(shl_ln9_1_fu_465_p3.read());
}

void sobel_filter::thread_zext_ln9_2_fu_379_p1() {
    zext_ln9_2_fu_379_p1 = esl_zext<18,10>(or_ln9_fu_357_p3.read());
}

void sobel_filter::thread_zext_ln9_3_fu_388_p1() {
    zext_ln9_3_fu_388_p1 = esl_zext<64,18>(add_ln9_1_fu_383_p2.read());
}

void sobel_filter::thread_zext_ln9_4_fu_483_p1() {
    zext_ln9_4_fu_483_p1 = esl_zext<11,9>(shl_ln9_fu_476_p3.read());
}

void sobel_filter::thread_zext_ln9_fu_374_p1() {
    zext_ln9_fu_374_p1 = esl_zext<64,18>(add_ln9_fu_369_p2.read());
}

void sobel_filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln7_fu_214_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void sobel_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address1\" :  \"" << in_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce1\" :  \"" << in_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q1\" :  \"" << in_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

